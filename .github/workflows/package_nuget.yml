name: üì¶ SonarCloud + NuGet Package - lab4u1

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sonarcloud:
    name: üîç An√°lisis y Publicaci√≥n lab4u1
    runs-on: ubuntu-latest

    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - name: üì• Checkout c√≥digo
        uses: actions/checkout@v4

      - name: üß∞ Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: ‚ûï Instalar herramientas globales
        run: |
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: üïì Generar versi√≥n √∫nica con timestamp
        id: version
        run: echo "VERSION=1.0.0-build-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      # ========================
      # üîπ Pruebas y cobertura - ATM
      # ========================
      - name: üß™ Test y cobertura - ATM
        run: |
          dotnet test ATM/ATM.Domain/ATM.Domain.csproj --collect:"XPlat Code Coverage"
          reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:ATM_Coverage" -reporttypes:Html
      # ========================
      # üîπ Pruebas y cobertura - Payment
      # ========================
      - name: üß™ Test y cobertura - Payment
        run: |
          dotnet test Payment/Payment.Domain/Payment.Domain.csproj --collect:"XPlat Code Coverage"
          reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:Payment_Coverage" -reporttypes:Html

      # ========================
      # üî∏ SonarCloud - ATM
      # ========================
      - name: üö¶ SonarScanner begin - ATM
        run: dotnet sonarscanner begin /k:"alvarocontreras13_1lab4" /o:"alvarocontreras13" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
      
      - name: ‚öôÔ∏è Build ATM
        run: dotnet build ATM/ATM.sln

      - name: ‚úÖ SonarScanner end - ATM
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # ========================
      # üî∏ SonarCloud - Payment
      # ========================
      - name: üö¶ SonarScanner begin - Payment
        run: dotnet sonarscanner begin /k:"alvarocontreras13_1lab42" /o:"alvarocontreras13" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      - name: ‚öôÔ∏è Build Payment
        run: dotnet build Payment/Payment.sln

      - name: ‚úÖ SonarScanner end - Payment
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # ========================
      # üì¶ Empaquetado NuGet
      # ========================
      - name: üì¶ Pack ATM.Domain
        run: |
          echo "üì¶ VERSION utilizada: $VERSION"
          dotnet pack ATM/ATM.Domain/ATM.Domain.csproj \
            -p:Version="$VERSION" -c Release -o ./output

      - name: üì¶ Pack Payment.Domain
        run: |
          dotnet pack Payment/Payment.Domain/Payment.Domain.csproj \
            -p:Version="$VERSION" -c Release -o ./output

      - name: üìÅ Verificar archivos .nupkg
        run: ls -lh output/*.nupkg

      # ========================
      # üöÄ Publicaci√≥n en GitHub Packages
      # ========================
      - name: ‚ûï Agregar fuente NuGet GitHub
        run: dotnet nuget add source --username alvarocontreras13 --password "${{ secrets.GH_PACKAGES_TOKEN }}" --store-password-in-clear-text --name github "https://nuget.pkg.github.com/alvarocontreras13/index.json"

      - name: üöÄ Push NuGet packages
        run: |
          if ls output/*.nupkg 1> /dev/null 2>&1; then
            dotnet nuget push output/*.nupkg --source github --api-key "${{ secrets.GH_PACKAGES_TOKEN }}" --skip-duplicate
          else
            echo "‚ö†Ô∏è No se encontraron archivos .nupkg en la carpeta output."
          fi
